"""
Django settings for my_pages_project project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv


# Build paths inside the project like this: BASE_DIR / 'subdir'.
# ベースディレクトリの設定
BASE_DIR = Path(__file__).resolve().parent.parent

# 環境変数のロード
load_dotenv(verbose=True)
dotenv_path = os.path.join(BASE_DIR.parent, ".env")
load_dotenv(dotenv_path)

###################################


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# シークレットキーの設定 こちらではランダム生成としている
from django.core.management.utils import get_random_secret_key

SECRET_KEY = get_random_secret_key()

# SECURITY WARNING: don't run with debug turned on in production!
# デバッグモードの可否
DEBUG = False

# 配信できるホスト/ドメイン名
ALLOWED_HOSTS = ["localhost", ".pythonanywhere.com", "natua.pythonanywhere.com"]

# Cookieの設定 Trueだと安全
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True


###################################
# Application definition

# 有効となるアプリケーション
INSTALLED_APPS = [
    "my_apps.apps.MyAppsConfig",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "import_export",
]

# 有効となるミドルウェア
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "my_apps.middleware.AccessLogMiddleware",
]

# 最初に見に行くURLルーティングテーブルの場所
ROOT_URLCONF = "config.urls"

# テンプレートエンジン
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# WSGIの場所
WSGI_APPLICATION = "config.wsgi.application"


###################################
# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# データベースの場所
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "natua$myApps",
        "USER": "natua",
        "PASSWORD": os.environ.get("MYSQL_PASSWORD"),
        "HOST": "natua.mysql.pythonanywhere-services.com",
        "PORT": "3306",
        "OPTIONS": {
            "init_command": "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    }
}


###################################
# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

# 有効なパスワードバリデータたち
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


###################################
# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

# 言語コード
LANGUAGE_CODE = "ja"

# タイムゾーン
TIME_ZONE = "Asia/Tokyo"

# 翻訳・タイムゾーンを使用するかどうか
USE_I18N = True
USE_TZ = True


###################################

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# (appごとの)staticファイルの場所
STATIC_URL = "/static/"

# staticファイルの読み込み場所
STATIC_ROOT = os.path.join(BASE_DIR, "static")
# STATICFILES_DIRS = [
#     BASE_DIR / 'hoge',
# ]

# これしておけばキャッシュが効くらしい
# STATICFILES_STORAGE = "django.contrib.staticfiles.storage.ManifestStaticFilesStorage"

###################################
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

# Primary_key=Trueのフィールドを持たないモデルに使用するデフォルトのフィールドタイプ。
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


###################################
# local_settings.pyのロード

try:
    from .local_settings import *
except:
    pass
